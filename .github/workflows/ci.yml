name: CI

on:
  push:
    branches: [main]
  pull_request:
    branches: [main]

permissions:
  contents: read

concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: true

jobs:
  lint:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-node@v4
        with:
          node-version: 20
          cache: npm
          cache-dependency-path: package-lock.json
      - run: npm ci
      - run: npm run lint --if-present || true

  test:
    runs-on: ubuntu-latest
    needs: lint
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-node@v4
        with:
          node-version: 20
          cache: npm
          cache-dependency-path: package-lock.json
      - run: npm ci
      - run: npm test -- --ci --coverage
      - name: Check coverage â‰¥ 70%
        run: |
          if [ -f "coverage/coverage-summary.json" ]; then
            node -e "
              const s = require('fs').readFileSync('coverage/coverage-summary.json', 'utf8');
              const p = JSON.parse(s).total.lines.pct;
              console.log('Coverage:', p + '%');
              if (p < 70) {
                console.error('Coverage ' + p + '% < 70%');
                process.exit(1);
              }
            "
          else
            echo "No coverage file found"
            exit 1
          fi
      - name: Upload JUnit
        uses: actions/upload-artifact@v4
        with:
          name: junit-auth
          path: reports/junit/junit.xml
          if-no-files-found: warn

  audit:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-node@v4
        with:
          node-version: 20
          cache: npm
          cache-dependency-path: package-lock.json
      - run: npm ci
      - run: npm audit --audit-level=moderate || true

  build:
    runs-on: ubuntu-latest
    needs: test
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-node@v4
        with:
          node-version: 20
          cache: npm
          cache-dependency-path: package-lock.json
      - run: npm ci
      - run: npm run build --if-present || echo "no build step"

  deploy:
    runs-on: ubuntu-latest
    needs: build
    steps:
      - run: echo "ðŸš€ Simulated deploy to staging environment successful!"
